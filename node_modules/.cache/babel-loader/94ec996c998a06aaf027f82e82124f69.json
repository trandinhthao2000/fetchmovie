{"ast":null,"code":"var _jsxFileName = \"D:\\\\udemy reactjs\\\\project6\\\\src\\\\App.js\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // const [error, setError] = useState();\n  // function fetchMoviesHandler() {\n  //   fetch(\"https://swapi.dev/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedMovie = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMovie);\n  //     });\n  // }\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true); // setError(null);\n    // try {\n\n    const response = await fetch(\"https://swapi.dev/api/films\"); // if (!response.ok) {\n    //   throw new Error(\"Something went wrong!\");\n    // }\n\n    const data = await response.json();\n    const transformedMovie = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovie); // } catch (error) {\n    //   setError(error.message);\n    // }\n\n    setIsLoading(false);\n  }, []); // const fetchMoviesHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-http-ef967-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\"\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Something went wrong!\");\n  //     }\n  //     const data = await response.json();\n  //     // console.log(data); tao 1 object\n  //     const loadedMovies = [];\n  //     for(const key in data) {\n  //       loadedMovies.push({\n  //         id: key,\n  //         title: data[key].title,\n  //         openingText: data[key].openingText,\n  //         releaseDate: data[key].releaseDate,\n  //       })\n  //     }\n  //     setMovies(loadedMovies);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n  // function addMovieHandler(movie) {\n  //   console.log(movie);\n  // }\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch(\n  //     \"https://react-http-ef967-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(movie),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n  // let content = <p>Found no movies.</p>;\n  // if (movies.length > 0) {\n  //   content = <MoviesList movies={movies} />;\n  // }\n  // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n  // if (isLoading) {\n  //   content = <p>Loading....</p>;\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 45\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, \"Loading....\")));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/udemy reactjs/project6/src/App.js"],"names":["React","useCallback","useState","useEffect","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedMovie","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C,CAhBa,CAiBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,kBAAkB,GAAGV,WAAW,CAAC,YAAY;AACjDS,IAAAA,YAAY,CAAC,IAAD,CAAZ,CADiD,CAEjD;AACA;;AACE,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6BAD0B,CAA5B,CAJ+C,CAO/C;AACA;AACA;;AAEA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACjD,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,QAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,OAAP;AAMD,KAPkB,CAAzB;AASAlB,IAAAA,SAAS,CAACQ,gBAAD,CAAT,CAtB+C,CAuBjD;AACA;AACA;;AACAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA3BqC,EA2BnC,EA3BmC,CAAtC,CApCa,CAkEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAJF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,SAAD,IAAcF,MAAM,CAACoB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEpB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAIGE,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJhB,CARF,CADF;AAkBD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState();\n  // function fetchMoviesHandler() {\n  //   fetch(\"https://swapi.dev/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedMovie = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMovie);\n  //     });\n  // }\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    // setError(null);\n    // try {\n      const response = await fetch(\n        \"https://swapi.dev/api/films\"\n      );\n      // if (!response.ok) {\n      //   throw new Error(\"Something went wrong!\");\n      // }\n\n      const data = await response.json();\n\n      const transformedMovie = data.results.map((movieData) => {\n              return {\n                id: movieData.episode_id,\n                title: movieData.title,\n                openingText: movieData.opening_crawl,\n                releaseDate: movieData.release_date,\n              };\n            });\n\n      setMovies(transformedMovie);\n    // } catch (error) {\n    //   setError(error.message);\n    // }\n    setIsLoading(false);\n  }, []);\n\n\n  // const fetchMoviesHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-http-ef967-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\"\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Something went wrong!\");\n  //     }\n\n  //     const data = await response.json();\n  //     // console.log(data); tao 1 object\n\n  //     const loadedMovies = [];\n\n  //     for(const key in data) {\n  //       loadedMovies.push({\n  //         id: key,\n  //         title: data[key].title,\n  //         openingText: data[key].openingText,\n  //         releaseDate: data[key].releaseDate,\n\n  //       })\n  //     }\n  //     setMovies(loadedMovies);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n\n  // useEffect(() => {\n  //   fetchMoviesHandler();\n  // }, [fetchMoviesHandler]);\n\n  // function addMovieHandler(movie) {\n  //   console.log(movie);\n  // }\n\n\n  // async function addMovieHandler(movie) {\n  //   const response = await fetch(\n  //     \"https://react-http-ef967-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\n  //     {\n  //       method: \"POST\",\n  //       body: JSON.stringify(movie),\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   );\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  // let content = <p>Found no movies.</p>;\n\n  // if (movies.length > 0) {\n  //   content = <MoviesList movies={movies} />;\n  // }\n\n  // if (error) {\n  //   content = <p>{error}</p>;\n  // }\n\n  // if (isLoading) {\n  //   content = <p>Loading....</p>;\n  // }\n\n  return (\n    <React.Fragment>\n      {/* <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section> */}\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n        {/* <button>Fetch Movies</button> */}\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {/* {!isLoading && movies.length === 0 && !error && <p>Found no movies.</p>}\n        {!isLoading && error && <p>{error}</p>} */}\n        {isLoading && <p>Loading....</p>}\n        {/* {content} */}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}