{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\udemy reactjs\\\\project6\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\udemy reactjs\\\\project6\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\udemy reactjs\\\\project6\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useCallback,useState,useEffect}from\"react\";import MoviesList from\"./components/MoviesList\";import\"./App.css\";import AddMovie from\"./components/AddMovie\";function App(){// const dummyMovies = [\n//   {\n//     id: 1,\n//     title: 'Some Dummy Movie',\n//     openingText: 'This is the opening text of the movie',\n//     releaseDate: '2021-05-18',\n//   },\n//   {\n//     id: 2,\n//     title: 'Some Dummy Movie 2',\n//     openingText: 'This is the second opening text of the movie',\n//     releaseDate: '2021-05-19',\n//   },\n// ];\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// function fetchMoviesHandler() {\n//   fetch(\"https://swapi.dev/api/films\")\n//     .then((response) => {\n//       return response.json();\n//     })\n//     .then((data) => {\n//       const transformedMovie = data.results.map((movieData) => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           openingText: movieData.opening_crawl,\n//           releaseDate: movieData.release_date,\n//         };\n//       });\n//       setMovies(transformedMovie);\n//     });\n// }\n// const fetchMoviesHandler = useCallback(async () => {\n//   setIsLoading(true);\n//   setError(null);\n//   try {\n//     const response = await fetch(\n//       \"https://swapi.dev/api/films\"\n//     );\n//     if (!response.ok) {\n//       throw new Error(\"Something went wrong!\");\n//     }\n//     const data = await response.json();\n//     const transformedMovie = data.results.map((movieData) => {\n//             return {\n//               id: movieData.episode_id,\n//               title: movieData.title,\n//               openingText: movieData.opening_crawl,\n//               releaseDate: movieData.release_date,\n//             };\n//           });\n//     setMovies(transformedMovie);\n//   } catch (error) {\n//     setError(error.message);\n//   }\n//   setIsLoading(false);\n// }, []);\nvar fetchMoviesHandler=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,loadedMovies,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch(\"https://listmovie-c0896-default-rtdb.firebaseio.com/movies.json\");case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(\"Something went wrong!\");case 8:_context.next=10;return response.json();case 10:data=_context.sent;console.log(data);loadedMovies=[];for(key in data){loadedMovies.push({id:key,title:data[key].title,openingText:data[key].openingText,releaseDate:data[key].releaseDate});}setMovies(loadedMovies);_context.next=20;break;case 17:_context.prev=17;_context.t0=_context[\"catch\"](2);setError(_context.t0.message);case 20:setIsLoading(false);case 21:case\"end\":return _context.stop();}}},_callee,null,[[2,17]]);})),[]);useEffect(function(){fetchMoviesHandler();},[fetchMoviesHandler]);// function addMovieHandler(movie) {\n//   console.log(movie);\n// }\nfunction addMovieHandler(_x){return _addMovieHandler.apply(this,arguments);}function _addMovieHandler(){_addMovieHandler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movie){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://listmovie-c0896-default-rtdb.firebaseio.com/movies.json\",{method:\"POST\",body:JSON.stringify(movie),headers:{\"Content-Type\":\"application/json\"}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;console.log(data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _addMovieHandler.apply(this,arguments);}var content=/*#__PURE__*/React.createElement(\"p\",null,\"Found no movies.\");if(movies.length>0){content=/*#__PURE__*/React.createElement(MoviesList,{movies:movies});}if(error){content=/*#__PURE__*/React.createElement(\"p\",null,error);}if(isLoading){content=/*#__PURE__*/React.createElement(\"p\",null,\"Loading....\");}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(AddMovie,{onAddMovie:addMovieHandler})),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:fetchMoviesHandler},\"Fetch Movies\")),/*#__PURE__*/React.createElement(\"section\",null,content));}export default App;","map":{"version":3,"sources":["D:/udemy reactjs/project6/src/App.js"],"names":["React","useCallback","useState","useEffect","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","fetch","response","ok","Error","json","data","console","log","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  // function fetchMoviesHandler() {\n  //   fetch(\"https://swapi.dev/api/films\")\n  //     .then((response) => {\n  //       return response.json();\n  //     })\n  //     .then((data) => {\n  //       const transformedMovie = data.results.map((movieData) => {\n  //         return {\n  //           id: movieData.episode_id,\n  //           title: movieData.title,\n  //           openingText: movieData.opening_crawl,\n  //           releaseDate: movieData.release_date,\n  //         };\n  //       });\n  //       setMovies(transformedMovie);\n  //     });\n  // }\n\n  // const fetchMoviesHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://swapi.dev/api/films\"\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Something went wrong!\");\n  //     }\n\n  //     const data = await response.json();\n\n  //     const transformedMovie = data.results.map((movieData) => {\n  //             return {\n  //               id: movieData.episode_id,\n  //               title: movieData.title,\n  //               openingText: movieData.opening_crawl,\n  //               releaseDate: movieData.release_date,\n  //             };\n  //           });\n\n  //     setMovies(transformedMovie);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://listmovie-c0896-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      console.log(data); \n\n      const loadedMovies = [];\n\n      for(const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n\n        })\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  // function addMovieHandler(movie) {\n  //   console.log(movie);\n  // }\n\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://listmovie-c0896-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading....</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n        {/* <button>Fetch Movies</button> */}\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found no movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading....</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}